name: hubs
on:
  push:
    paths-ignore: ["README.md"]
  workflow_dispatch:

env:
  registryName: mozillareality
  containerName: hubs

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout-hubs
        uses: actions/checkout@v2
        with:
          repository: mozilla/hubs
          ref: feature/turkey
          path: "./hubs"
      - name: docker setup buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ env.registryName }}
          password: ${{ secrets.DOCKER_HUB_PWD }}
      - name: docker build(x) push
        uses: docker/build-push-action@v2
        with:
          context: hubs/
          file: hubs/RetPageOriginDockerfile
          tags: ${{ env.registryName }}/${{ env.containerName }}:${{ github.run_number  }}
          cache-from: type=registry,ref=${{ env.registryName }}/${{ env.containerName }}:buildcache
          cache-to: type=registry,ref=${{ env.registryName }}/${{ env.containerName }}:buildcache,mode=max
          push: true

  # todo: revisit github action reusable workflows when it reaches general availability
  # turkeyGitops:
  #   needs: build
  #   uses: mozilla/hubs-ops/.github/workflows/turkeyGitops.yml@feature/gha-template
  #   with:
  #     promoteFrom: mozillareality/hubs:${{ github.run_number }}
  #     promoteTo: mozillareality/hubs:${GITHUB_REF/'refs/heads/'/}
  #     # https://docs.github.com/en/actions/learn-github-actions/reusing-workflows#limitations
  #     #   Any environment variables set in an env context defined at the workflow level in the caller workflow are not propagated to the called workflow.
  #     # promoteFrom: ${{ env.registryName }}/${{ env.containerName }}:${{ github.run_number }}
  #     # promoteTo: ${{ env.registryName }}/${{ env.containerName }}:${GITHUB_REF/'refs/heads/'/}

  promote:
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: promote artifact
        run: |
          fromTag=${{ env.registryName }}/${{ env.containerName }}:${{ github.run_number }}
          toTag=${{ env.registryName }}/${{ env.containerName }}:${GITHUB_REF/'refs/heads/'/}
          echo ${{ secrets.DOCKER_HUB_PWD }} | sudo docker login --username $registryName --password-stdin
          docker pull $fromTag && docker tag $fromTag $toTag && sudo docker push $toTag
          echo "promoted :$fromTag to :$toTag"

  staging_pr_to_prod:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    needs: promote
    steps:
      - name: create pr for staging -> prod
        run: |
          gh pr create -H staging -B prod

  prod_cut_release_branch:
    if: github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    needs: promote
    steps:
      - name: checkout-hubs
        uses: actions/checkout@v2
        with:
          path: ./hubs_prod
      - name: cut release branch for prod
        run: |
          cd ./hubs_prod
          git checkout -b releases/$(date '+%y%m%d').$GITHUB_RUN_NUMBER
